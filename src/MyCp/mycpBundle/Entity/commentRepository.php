<?php

namespace MyCp\mycpBundle\Entity;

use Doctrine\ORM\EntityRepository;
use MyCp\mycpBundle\Entity\ownership;
use MyCp\mycpBundle\Entity\comment;


/**
 * commentRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class commentRepository extends EntityRepository
{
    function insert_comment($data)
    {
         $em = $this->getEntityManager();
         
         $ownership = $em->getRepository('mycpBundle:ownership')->find($data['com_ownership_id']);
         
         $comment = new comment();
         $comment->setCommentDate(new \DateTime());
         $comment->setCommentOwnership($ownership);
         $comment->setCommentRating($data['com_rating']);
         $comment->setCommentUserName($data['com_user_name']);
         $comment->setComments($data['com_comments']);
         $comment->setEmail($data['com_email']);
         $comment->setPublic(true);       

         $em->persist($comment);
         $em->flush();
         
         $newRating = ($ownership->getOwnRating() + $comment->getCommentRating()) / 2;         
         $ownership->setOwnRating($newRating);
         
         if($comment->getCommentRating() >= 3)
         {
             $total_comments = $ownership->getOwnCommentsTotal() + 1;
             $ownership->setOwnCommentsTotal($total_comments);
         }
         $em->persist($ownership);
         $em->flush();
    }
    
    function get_comments($ownsership_id)
    {
        $em = $this->getEntityManager();
        $query_string = "SELECT c FROM mycpBundle:comment c
                         WHERE c.com_public=1
                           AND c.com_ownership = $ownsership_id
                         ORDER BY c.com_date DESC";

        return $em->createQuery($query_string)->getResult();
    }
}
