<?php

namespace MyCp\mycpBundle\Entity;

use Doctrine\ORM\EntityRepository;
use MyCp\mycpBundle\Helpers\Dates;

/**
 * logRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class logRepository extends EntityRepository
{

    function getLogs($post)
    {
        $user=$post['user'];
        $module=$post['module'];
        $from_date=$post['from_date'];
        $to_date=$post['to_date'];
        $role=$post['role'];

        $em=$this->getEntityManager();
        $qb = $em->createQueryBuilder();
        $qb->select('log')
            ->from("mycpBundle:log", "log")
            ->leftJoin("log.log_user", "user")
            ->orderBy("log.log_date", "DESC");

        if($user!='')
            $qb->andWhere("user.user_user_name LIKE '$user'")
                ->orWhere("user.user_name LIKE '$user'")
                ->orWhere("user.user_last_name LIKE '$user'");

        if($module!='' && $module!='-1')
            $qb->andWhere("log.log_module = $module");

        if($role!='')
            $qb->andWhere("user.user_role = '$role'");

        if($from_date!='') {
            $from_date = Dates::createForQuery($from_date, "d/m/Y");
            $qb->andWhere("log.log_date >= '$from_date'");
        }

        if($to_date!='')
        {
            $to_date = Dates::createForQuery($to_date, "d/m/Y");
            $qb->andWhere("log.log_date <= '$to_date'");
        }

        return $qb->getQuery()->getResult();
    }

    function getOldLogs($date, $maxResults = 50)
    {
        $em=$this->getEntityManager();
        $qb = $em->createQueryBuilder();
        $qb->select('log')
            ->from("mycpBundle:log", "log")
            ->where('log.log_date <= :date')
            ->setParameter("date", $date)
            ->orderBy("log.log_date", "DESC")
            ->setMaxResults(50);

        return $qb->getQuery()->getResult();
    }

}
