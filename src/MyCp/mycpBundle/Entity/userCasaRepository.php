<?php

namespace MyCp\mycpBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * userCasaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class userCasaRepository extends EntityRepository {

    function get_users_casa() {
        $em = $this->getEntityManager();
        $query = $em->createQuery("SELECT uc FROM mycpBundle:userCasa uc
        GROUP BY uc.user_casa_user");
        return $query->getResult();
    }

    function getUsers($exclude_own_id = null) {
        $em = $this->getEntityManager();
        $query = $em->createQuery("SELECT user.user_id, user.user_name, own.own_mcp_code, own.own_name FROM mycpBundle:userCasa uc
        JOIN uc.user_casa_user user
        JOIN uc.user_casa_ownership own" .
                (($exclude_own_id != null) ? " WHERE own.own_id <> $exclude_own_id " : " ") .
                " ORDER BY user.user_name");
        return $query->getResult();
    }

    function createUser($ownership, $file, $dir_file, $factory, $send_creation_mail) {
        $em = $this->getEntityManager();
        $user = new user();        
        $country = $em->getRepository('mycpBundle:country')->findBy(array('co_name' => 'Cuba'));
        $subrole = $em->getRepository('mycpBundle:role')->findOneBy(array('role_name' => 'ROLE_CLIENT_CASA'));
        
        $address = $ownership->getOwnAddressStreet()." #".$ownership->getOwnAddressNumber().", ".$ownership->getOwnAddressMunicipality()->getMunName().", ".$ownership->getOwnAddressProvince()->getProvName();
        $phone = '(+53' . $ownership->getOwnAddressProvince()->getProvPhoneCode() . ') ' . $ownership->getOwnPhoneNumber();
        
        $email = $ownership->getOwnEmail1();
            if (empty($email))
                $email = $ownership->getOwnEmail2();
        
        $user->setUserAddress($address);
        $user->setUserCity($ownership->getOwnAddressMunicipality()->getMunName());
        $user->setUserCountry($country[0]);
        $user->setUserEmail($email);
        $user->setUserPhone($phone);
        $user->setUserName($ownership->getOwnMcpCode());
        
        if ($file) {
            $photo = new photo();
            $fileName = uniqid('user-') . '-photo.jpg';
            $file->move($dir_file, $fileName);
            $photo->setPhoName($fileName);
            $user->setUserPhoto($photo);
            $em->persist($photo);
        }

        $user->setUserRole('ROLE_CLIENT_CASA');
        $user->setUserEnabled(false);
        $user->setUserCreatedByMigration(false);
        $user->setUserSubrole($subrole);
        $user_name = explode(' ', $ownership->getOwnHomeOwner1());
        $user->setUserUserName($user_name[0]);
        $user->setUserLastName($user_name[1]);
        $user->setUserPassword(" ");
        
        $user_casa = new userCasa();
        $user_casa->setUserCasaOwnership($ownership);
        $user_casa->setUserCasaUser($user);
        $encoder = $factory->getEncoder($user);
        $secret_token = $encoder->encodePassword("casa_".$ownership->getOwnMcpCode(), $user->getSalt());
        $user_casa->setUserCasaSecretToken($secret_token);
        $em->persist($user);
        $em->persist($user_casa);
    }

    function get_owners_photos($ownership_id) {
        $em = $this->getEntityManager();
        $query_string = "SELECT pho.pho_name as photo
                  FROM mycpBundle:userCasa uc
                  JOIN uc.user_casa_user u
                  JOIN u.user_photo pho
                  WHERE uc.user_casa_ownership = $ownership_id";

        $query = $em->createQuery($query_string);
        $photo_name = $query->setMaxResults(1)->getResult();

        if ($photo_name == null)
            $photo_name = "no_photo.gif";
        else if (!file_exists(realpath("uploads/userImages/" . $photo_name)))
            $photo_name = "no_photo.gif";
        return $photo_name;
    }
    
    function getAccommodationsWithoutUser()
    {
        $em = $this->getEntityManager();
        $query = $em->createQuery("SELECT o FROM mycpBundle:ownership o
        WHERE (SELECT count(user) FROM mycpBundle:userCasa user WHERE user.user_casa_ownership = o.own_id) = 0
        ORDER BY o.own_mcp_code");
        return $query->getResult();
    }

}
