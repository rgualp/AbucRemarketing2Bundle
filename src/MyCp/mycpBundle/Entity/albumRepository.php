<?php

namespace MyCp\mycpBundle\Entity;

use Doctrine\ORM\EntityRepository;
use MyCp\mycpBundle\Entity\album;
use MyCp\mycpBundle\Entity\albumLang;
use MyCp\mycpBundle\Entity\lang;
use MyCp\mycpBundle\Entity\albumCategory;


/**
 * albumRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class albumRepository extends EntityRepository
{
    function insert_album($data)
    {
        $name='';
        $keys=array_keys($data);
        foreach($keys as $item)
        {
            if(strpos($item, 'name')!==false)
            {
                $name=$data[$item]; break;
            }
        }
        $active=0;
        if(isset($data['public']))
            $active=1;
        $em = $this->getEntityManager();
        $album=new album();
        $category=$em->getRepository('mycpBundle:albumcategory')->find($data['category']);
        $album->setAlbumName($name);
        $album->setAlbumOrder(0);
        $album->setAlbumActive($active);
        $album->setAlbumCategory($category);
        $em->persist($album);


        foreach($keys as $item)
        {
            if(strpos($item, 'name')!==false)
            {

                $id=substr($item, 5, strlen($item));
                $album_lang= new albumLang();
                $album_lang->setAlbumLangBriefDescription($data['brief_desc_'.$id]);
                $album_lang->setAlbumLangName($data['name_'.$id]);
                $repo=$em->getRepository('mycpBundle:lang');
                $lang=$repo->find($id);
                $album_lang->setAlbumLangLang($lang);
                $album_lang->setAlbumLangAlbum($album);
                $em->persist($album_lang);
            }
        }
        $em->flush();
    }

    function edit_album($data)
    {
        $name='';
        $keys=array_keys($data);
        foreach($keys as $item)
        {
            if(strpos($item, 'name')!==false)
            {
                $name=$data[$item]; break;
            }
        }
        $id_album=$data['edit_album'];
        $active=0;
        if(isset($data['public']))
            $active=1;
        $em = $this->getEntityManager();
        $album=$em->getRepository('mycpBundle:album')->find($id_album);
        //var_dump($data); exit();
        $category=$em->getRepository('mycpBundle:albumcategory')->find($data['category']);
        $album->setAlbumName($name);
        $album->setAlbumOrder(0);
        $album->setAlbumActive($active);
        $album->setAlbumCategory($category);
        $em->persist($album);

        $query = $em->createQuery("DELETE mycpBundle:albumLang al WHERE al.album_lang_album=$id_album");
        $query->execute();

        foreach($keys as $item)
        {
            if(strpos($item, 'name')!==false)
            {

                $id=substr($item, 5, strlen($item));
                $album_lang= new albumLang();
                $album_lang->setAlbumLangBriefDescription($data['brief_desc_'.$id]);
                $album_lang->setAlbumLangName($data['name_'.$id]);
                $repo=$em->getRepository('mycpBundle:lang');
                $lang=$repo->find($id);
                $album_lang->setAlbumLangLang($lang);
                $album_lang->setAlbumLangAlbum($album);
                $em->persist($album_lang);
            }
        }
        $em->flush();
    }

    function delete_destination($id_destination)
    {
        $em = $this->getEntityManager();
        $query = $em->createQuery("DELETE mycpBundle:destinationlang des WHERE des.des_lang_des_id=$id_destination");
        return $query->getArrayResult();
    }

    function get_all_albums($filter_name, $filter_active,$filter_category)
    {
        $string='';
        if($filter_active!='null' && $filter_active!='')
        {
            $string="AND a.album_active = '$filter_active'";
        }

        $string2='';
        if($filter_category!='null' && $filter_category!='')
        {
            $string2="AND a.album_category = '$filter_category'";
        }

        $em = $this->getEntityManager();
        $query = $em->createQuery("SELECT a FROM mycpBundle:album a
        WHERE a.album_name LIKE '%$filter_name%' $string $string2");
        return $query->getResult();
    }

}
