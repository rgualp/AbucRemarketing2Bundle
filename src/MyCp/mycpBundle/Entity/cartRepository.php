<?php

namespace MyCp\mycpBundle\Entity;

use Doctrine\ORM\EntityRepository;
use MyCp\mycpBundle\Entity\cart;

/**
 * cartRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class cartRepository extends EntityRepository {

    public function getCartItems($user_ids) {
        try {
            $em = $this->getEntityManager();
            $query_string = "SELECT c FROM mycpBundle:cart c ";
            $where = "";

            if ($user_ids["user_id"] != null)
                $where.= " WHERE c.cart_user = ".$user_ids['user_id'];
            else if ($user_ids["session_id"] != null)
                $where .= " WHERE c.cart_session_id = '".$user_ids["session_id"]."'";

            if ($where != "")
                return $em->createQuery($query_string . $where)->getResult();
            else
                return null;
        } catch (Exception $e) {
            return null;
        }
    }

    public function countItems($user_ids)
    {
        try {
            $em = $this->getEntityManager();
            $query_string = "SELECT DISTINCT r.room_id FROM mycpBundle:cart c JOIN c.cart_room r";
            $where = "";

            if ($user_ids["user_id"] != null)
                $where.= " WHERE c.cart_user = ".$user_ids['user_id'];
            else if ($user_ids["session_id"] != null)
                $where .= " WHERE c.cart_session_id = '".$user_ids["session_id"]."'";

            if ($where != "")
                return count($em->createQuery($query_string . $where)->getResult());
            else
                return 0;
        } catch (Exception $e) {
            return 0;
        }
    }

    public function emptyCart($user_ids)
    {
        try {
            $em = $this->getEntityManager();
            $query_string = "SELECT c FROM mycpBundle:cart c ";
            $where = "";
            $cartItems = null;

            if ($user_ids["user_id"] != null)
                $where.= " WHERE c.cart_user = ".$user_ids['user_id'];
            else if ($user_ids["session_id"] != null)
                $where .= " WHERE c.cart_session_id = '".$user_ids["session_id"]."'";

            if ($where != "")
                $cartItems = $em->createQuery($query_string . $where)->getResult();

            foreach($cartItems as $item)
            {
                $em->remove($item);
            }
            $em->flush();

        } catch (Exception $e) {

        }
    }

}
