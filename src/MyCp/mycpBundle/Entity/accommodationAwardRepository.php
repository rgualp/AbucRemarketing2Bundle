<?php

namespace MyCp\mycpBundle\Entity;

use Doctrine\ORM\EntityRepository;
use MyCp\mycpBundle\Entity\album;
use MyCp\mycpBundle\Entity\albumLang;
use MyCp\mycpBundle\Helpers\OrderByHelper;
use MyCp\mycpBundle\Helpers\OwnershipStatuses;

/**
 * accommodationAwardRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class accommodationAwardRepository extends EntityRepository
{
    public function setAccommodationAward($accommodations_ids, $award_id, $year) {
        $em = $this->getEntityManager();
        foreach ($accommodations_ids as $accommodation_id) {
            $accommodation = $em->getRepository('mycpBundle:ownership')->find($accommodation_id);
            $award = $em->getRepository('mycpBundle:award')->find($award_id);

            $awardAccommodation = new accommodationAward();
            $awardAccommodation->setAccommodation($accommodation)
                ->setAward($award)
                ->setYear($year);
            $em->persist($awardAccommodation);

        }

        $em->flush();
    }

    public function getAccommodationsAward($awardId)
    {
        $em = $this->getEntityManager();

        $qb = $em->createQueryBuilder();
        $qb->select('ac')
            ->from("mycpBundle:accommodationAward", "ac")
            ->join("ac.accommodation", "a")
            ->join("ac.award", "aw")
            ->orderBy("ac.year", "DESC")
            ->addOrderBy("a.own_mcp_code", "ASC")
            ->where("aw.id = :awardId")
            ->setParameter("awardId", $awardId);

        return $qb->getQuery()->getResult();
    }

    public function getAccommodationsForSetAward($awardId, $orderByOption = OrderByHelper::AWARD_ACCOMMODATION_RANKING, $filter_code="", $filter_name="", $filter_province="", $filter_municipality="", $filter_destination="", $filter_year="" )
    {
        $em = $this->getEntityManager();
        $qb = $em->createQueryBuilder();
        $qb->select('o', 'a.year')
            ->addSelect("CASE WHEN (aw.id = :awardId) THEN 1 ELSE 0 END")
            ->from("mycpBundle:ownership", "o")
            ->leftJoin("o.awards", "a")
            ->leftJoin("a.award", "aw")
            ->setParameter("awardId", $awardId)
            ->where("o.own_status = :status")
            ->setParameter("status", OwnershipStatuses::ACTIVE);

        if($filter_code != "" && $filter_code != "null")
            $qb->andWhere("o.own_mcp_code LIKE :accommodationCode")
                ->setParameter("accommodationCode", '%'.$filter_code.'%');

        if($filter_name != "" && $filter_name != "null")
            $qb->andWhere("o.own_name LIKE :accommodationName")
                ->setParameter("accommodationName", '%'.$filter_name.'%');

        if($filter_province != "" && $filter_province != "null")
            $qb->andWhere("o.own_address_province = :province")
                ->setParameter("province", $filter_province);

        if($filter_municipality != "" && $filter_municipality != "null")
            $qb->andWhere("o.own_address_municipality = :municipality")
                ->setParameter("municipality", $filter_municipality);

        if($filter_destination != "" && $filter_destination != "null")
            $qb->andWhere("o.own_destination = :destinationId")
                ->setParameter("destinationId", $filter_destination);

        if($filter_year != "" && $filter_year != "null")
            $qb->andWhere("a.year = :filter_year")
                ->setParameter("filter_year", $filter_year);

        switch($orderByOption)
        {
            case OrderByHelper::AWARD_ACCOMMODATION_RANKING: $qb->orderBy("o.own_ranking", "DESC"); break;
            case OrderByHelper::AWARD_ACCOMMODATION_CODE: $qb->orderBy("o.own_mcp_code", "ASC"); break;
        }

        return $qb->getQuery()->getResult();
    }
}
