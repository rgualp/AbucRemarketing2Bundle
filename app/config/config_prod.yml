imports:
    - { resource: config.yml }

#framework:
#    validation:
#        cache: apc

#doctrine:
#    orm:
#        metadata_cache_driver: apc
#        result_cache_driver: apc
#        query_cache_driver: apc
monolog:
    handlers:
        # this "file_log" key could be anything
        file_log:
            type: stream
            # log to var/log/(environment).log
            path: "%kernel.logs_dir%/%kernel.environment%.log"
            # log *all* messages (debug is lowest level)
            level: debug

        syslog_handler:
            type: syslog
            # log error-level messages and higher
            level: error
#monolog:
#    handlers:
#        main:
#            type:         fingers_crossed
#            action_level: error
#            handler:      errors
#        mail:
#            type:         fingers_crossed
#            action_level: critical
#            handler:      buffered
#        nested:
#            type:  stream
#            path:  "%kernel.logs_dir%/%kernel.environment%.log"
#            level: debug
#        errors:
#            type:  stream
#            path:  "%kernel.logs_dir%/errors_%kernel.environment%.log"
#            level: error
#        buffered:
#            type: buffer
#            handler: swift
#        swift:
#            type: swift_mailer
#            from_email: errors@mycasaparticular.com
#            to_email: [orlando@hds.li]
#            subject: An Error Occurred!
#            level: debug
#        console:
#            type:  console

#lsw_memcache:
#    session:
#        pool: default
#    pools:
#        default:
#            servers:
#              - { host: localhost, tcp_port: 11211 }
#    doctrine:
#        metadata_cache:
#            pool: default
#            entity_manager: default          # the name of your entity_manager connection
#            document_manager: default        # the name of your document_manager connection
#        result_cache:
#            pool: default
#            entity_manager: [default, read]  # you may specify multiple entity_managers
#            prefix: "result_"                # you may specify a prefix for the entries
#        query_cache:
#            pool: default
#            entity_manager: default
